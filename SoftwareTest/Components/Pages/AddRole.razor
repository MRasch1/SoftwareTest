@page "/addrole"

@using Services


<h3>Add Role to User</h3>

<div class="form-group">
    <label for="emailInput">User Email:</label>
    <input id="emailInput" @bind="UserEmail" class="form-control" placeholder="Enter user email" />
</div>

<div class="form-group">
    <label for="roleInput">Role Name:</label>
    <input id="roleInput" @bind="RoleName" class="form-control" placeholder="Enter role name" />
</div>

<button class="btn btn-primary" @onclick="AssignRole">Assign Role</button>

@if (!string.IsNullOrEmpty(Message))
{
    <div class="mt-3 alert @MessageCssClass">
        @Message
    </div>
}

@code {
    private string UserEmail { get; set; } = string.Empty;
    private string RoleName { get; set; } = string.Empty;
    private string Message { get; set; } = string.Empty;
    private string MessageCssClass { get; set; } = "alert-info";

    [Inject]
    private IUserRoleService UserRoleService { get; set; } = default!;

    private async Task AssignRole()
    {
        if (string.IsNullOrWhiteSpace(UserEmail) || string.IsNullOrWhiteSpace(RoleName))
        {
            MessageCssClass = "alert-warning";
            Message = "Please fill in both the user email and role name.";
            return;
        }

        try
        {
            await UserRoleService.AssignRoleToUserAsync(UserEmail, RoleName);
            MessageCssClass = "alert-success";
            Message = $"Role '{RoleName}' successfully assigned to user '{UserEmail}'.";
        }
        catch (Exception ex)
        {
            MessageCssClass = "alert-danger";
            Message = $"Error: {ex.Message}";
        }
    }
}
